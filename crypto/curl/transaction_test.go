/*
MIT License

Copyright (c) 2016 Sascha Hanse
Copyright (c) 2017 Shinya Yagyu

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
package curl

import (
	"encoding/json"
	"testing"
	"time"
	"fmt"
	"github.com/stretchr/testify/assert"
)

func TestBuildTrytesFromTx(t *testing.T){
	layout := "01/02/2006 3:04:05 PM"
	//2017-Dec-08 10:53:18
	ti, err := time.Parse(layout, "12/08/2017 10:53:18 AM")
	if err!= nil{
		fmt.Println(err)
	}
	fmt.Println(ti.Unix())
	tx := Transaction{
		SignatureMessageFragment: "VRBNUTZEIHHRDAFVBBRVPANAWHWYWCCMVBVGKHOVVBTLB9IUKIDTBNYOKSFWEWHKDFLAZGSTDBNDWUXWCHLKYLGGLQFPEIDIBWVEBJGNNASXHLGCZGOLBVEQYBPA9KQHABMWLDVWAWUDJSTJOYB9QMPCPYQXTWKDL9OJODXTMKOHCOKDGUSSBVMJBJEIV9RQMMNXVZKLJIDFMGOTWRPHWPKLJXLEWJACNOQQAB9LHZMRYHHCSCXXVPTW9DFC9SMNVFPULBM9EMJKXKRIYKWJVATBPHRCCXUDRMAYOBIMPLKZIBQGVXSXNVQSNQMDTNXFXVNLUPKHWOECTGZTHVMVGZMKTBZYXO9XDZEYQLOWBWQVCWHBAEFDGEYWPYBHJX9USRKPQKOLIZRHPZKVG9JRO9PORGNESOJUXTCNWXUVXZFEUPWAXEEXREQVNDZISGAXXXARCKPCTFXNVMNTCAOCYLDQSCSKPNLCMYWITV9Z9ZTOOIICYIIAB9HZXPKMWYLOMDWAIXVILFCTQUCJOZEF9NMQTVJMC9WNBKOARGROAPNGWKVIPJHYOLCKLUEQKHTYHNFDSNTMUGNJHKEOVAHOC9MZRPMLSEYPUEFK9LDMETEIYCIPLKFOHITIEWNYSCGGXJCO9CJHYLAKXLRRRTEAFFTRZLHXFYOUXWZVTDRWPOIPPWMHCLXLSWVRMH9EXHVDUQGOZYUVVWYJEGFTSNV9EVKYVPLLDLIENRCFQDXXDQ9AXJXOEJXWXZMIXYUIMVHCISTVEN9PNCSNLXYDEKTPVEGZYCITRPABDVUFFH9SNHLHXUGBC9ZYVTSIDKADETDABSEUQYRUCKDAFOKBSMXOPKPTET9IIFXPCPMC9UMQJMTWRIENXRYQAINQMUAMMIKRJBBAOKLNHCAEOXHHIDCGAXJRPEIWCLTAJ9E9VWEJ9LTKBDNHN9RQKRPZUPAZLHMSWHOJUCHDPPFPCMUVFUPRRWCJJWXKI9ZXXOFZPCDBNBYCKNTHHCCUQHDJOQEC9FGAIFQDVNEDRKWBIQVQUVWYAZVKNGFTUCMMWZERZPMDH9FXCNGOGZVQYHFNPHJRYWESFWABPOEZLYDCJXLPQSKBXGDFJPTDQMLPARGTRZUCWIXPOYHQEFXSCVYWZQSAEYVJSXEQPMROHQIAAYCTUGQXIPEDNGMUGGMLRSQJCJRK9VDJCQYWDQJBZ9LBF9MCHZAOMACWVSQWLEUHOGWFIRDEPUBBRIZCSBBGSVWMBLHFDFOHAQUAQUXDXCXNONMSHOCXCDXVNSAGRBOXVASQOWCINPXKFHRRNYJKOGSXFANVUBKICPOI9UOXO9VSGJVLITNZJFQHHAVZSIANVULNQRIWUABVFPCOJNFBQZG9DWMBQEVASCQOLQAYHWKWHKIRNYIVNSOVCKVBIHEICBDDTWQFWPKKUQPOUXXTNGZPPRDHNADHD9GWTDGHLOWECHPPVJXRDSEXSLYVUYPGZTCAGSEZODZPFYTFJQVHOMIYJUHUNVGSW9JGMSXQOYHXNHSMYQDZECJVXFC99QCBTMFMKTAHDIDHLYTYTXHYLIFWAEKNGPAURJANWWRTMPYBBUKVBEUTAQYMRKJ9NNGWZACPDRLRYK9ANMESUXGAEEYFTZNQASGZXQKKWYKMZVQH9HBZYWBJEJHMTEMPRZHNLLXKFB9ZVZQKE9VJQHNSBNRAEZRMBFXJCPB9GLHYTGJIYUOHTIGYAJLE9GABMXWSIQCTRYDLQULKZUS9YFSFHYLBNIZYEDZT9IISVZRBMCL9LSBCBRWASFXSIIRPPJVKWNKEEGTZOSWVQIRJLAOGLAB9XILWAVTKLUPZLQNJMVXJ9KRNEQWNTKKDIWTJSRDSC9OVEDUZG9TRARIULWKBTIKOAICGRFCOQTMLWOWUDUMVPCRYHRWSKDCNKRLBLKGCVMDFHWL9XCOYUUTORAGZ9PCDJBKXQIOEGRJJSBZWYJWGRKWAVCYMNUIADWVKYFEYCWRPU9PULBDJPTYAG99RRQXTD9LZGEAESFVGYDRGTTPTYQFTIFDHGQVY99OEIXCCJCSPNGRPJQBCZE9LMAVJLUMTMDRGAVYP9EGQALSVWUKOUSXSDDHBAPYHYQJNPDDNCOWZKFUWFFSLGIVNJKRIOZDJTYMAHINSNIITSKG9GMHWOTOSIQYT9TYRTBVULVD",
		Address:                  "KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU",
		Value:                    0,
		Tag:                      "",
		Timestamp:                time.Unix(1512730398, 0),
		CurrentIndex:             0,
		LastIndex:                1,
		Bundle:                   "KVXFOOGGUZDEFDOTEIEONIQWTSEHZFLOMMYME9JTYJAVETJWGSAVCCP9LVDPGQAWRTSWGQQRAEZYJLMVZ",
		Nonce:                    "QAUCTZFTZKFZMESHWRLUSW9KX9L",
		TrunkTransaction:         "MEXCIYANXQYWNYUFXNZOFJFPNZRHVHSQ9CLBEUOCPWPSBAQ9C9HFQGEAPKXWHWMAIHMIHLEVX9JVZ9999",
		BranchTransaction:        "HECOIJYCJPOPDOAHWKEPUKZCTJNN9RSCQJLNMCTOONRBDECRHHWOMJUWQYDD9FCEBA9KAIKFYGQNA9999",
	}
	fmt.Printf(" tx is %s\n",tx.Hash())
	fmt.Printf(" trytes is %s\n",tx.Trytes())
	fmt.Printf(" trytes hash is %s\n",tx.Trytes().Hash())
	var mwm int64 = 0
	for mwm = 1; mwm <= 18; mwm++ {
		fmt.Printf("%v, %v\n",mwm,tx.HasValidNonce(mwm))
	}

}

// XXX: come up with more test cases that could ideally be
// 			shared accross implementations.

func TestNewTransactionFromTrits(t *testing.T) {
	var trytes Trytes
	//var hash Trytes = "IPQYUNLDGKCLJVEJGVVISSQYVDJJWOXCW9RZXIDFKMBXDVZDXFBZNZJKBSTIMBKAXHFTGETEIPTZGNTJK"
	out := Transaction{
		SignatureMessageFragment
		Address:                  "A9RGRKVGWMWMKOLVMDFWJUHNUNYWZTJADGGPZGXNLERLXYWJE9WQHWWBMCPZMVVMJUMWWBLZLNMLDCGDJ",
		Value:                    0,
		Tag:                      "999999999999999999999999999",
		Timestamp:                time.Unix(1482522289, 0),
		CurrentIndex:             0,
		LastIndex:                0,
		Bundle:                   "TXEFLKNPJRBYZPORHZU9CEMFIFVVQBUSTDGSJCZMBTZCDTTJVUFPTCCVHHORPMGCURKTH9VGJIXUQJVHK",
		Nonce:                    "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
		TrunkTransaction:         "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
		BranchTransaction:        "999999999999999999999999999999999999999999999999999999999999999999999999999999999",
	}
	tx2,err := NewTransaction(trytes)
	if err != nil {
		t.Error(err)
	}
	if tx2.Hash()!=out.Hash(){
		fmt.Printf("want: %#v\nhave: %#v\n", out.Hash(),tx2.Hash())
	}

	fmt.Printf("%s\n", out.Trytes())
	fmt.Printf("%s,%v\n",trytes.Hash(),trytes.Hash()=="IPQYUNLDGKCLJVEJGVVISSQYVDJJWOXCW9RZXIDFKMBXDVZDXFBZNZJKBSTIMBKAXHFTGETEIPTZGNTJK")
	fmt.Printf("%s,%v\n",out.Hash(),out.Hash()=="IPQYUNLDGKCLJVEJGVVISSQYVDJJWOXCW9RZXIDFKMBXDVZDXFBZNZJKBSTIMBKAXHFTGETEIPTZGNTJK")
	tt, err := NewTransaction(trytes)
	if err != nil {
		t.Fatalf("TransactionFromTrits() expected err to be %#v but got %#v", nil, err)
	}
	fmt.Printf("%s,%v\n",tt.Hash(),tt.Hash()=="IPQYUNLDGKCLJVEJGVVISSQYVDJJWOXCW9RZXIDFKMBXDVZDXFBZNZJKBSTIMBKAXHFTGETEIPTZGNTJK")
	if out.Trytes() != tt.Trytes() {
		t.Errorf("TransactionFromTrits()\nwant: %#v\nhave: %#v", out, tt)
	}

	fmt.Printf("TransactionFromTrits()\nwant: %#v\nhave: %#v", out, tt)
	js, err := json.Marshal(tt)
	if err != nil {
		t.Error(err)
	}
	if trytes != Trytes(js[1:len(js)-1]) {
		t.Error("transaction marshaller is incorrect.")
	}
	var tt2 Transaction
	if err := json.Unmarshal([]byte(`"`+trytes+`"`), &tt2); err != nil {
		t.Error(err)
	}
	if tt.Trytes() != tt2.Trytes() {
		t.Error("transaction unmarshaller is incorrect.")
	}

	//t.Logf("tt: %#v\n", tt)
}

func TestTransaction_Hash(t *testing.T) {

	var trytes1 Trytes = "999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999A9RGRKVGWMWMKOLVMDFWJUHNUNYWZTJADGGPZGXNLERLXYWJE9WQHWWBMCPZMVVMJUMWWBLZLNMLDCGDJ999999999999999999999999999999999999999999999999999999YGYQIVD99999999999999999999TXEFLKNPJRBYZPORHZU9CEMFIFVVQBUSTDGSJCZMBTZCDTTJVUFPTCCVHHORPMGCURKTH9VGJIXUQJVHK999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
	hash1_p27 := Trytes("IPQYUNLDGKCLJVEJGVVISSQYVDJJWOXCW9RZXIDFKMBXDVZDXFBZNZJKBSTIMBKAXHFTGETEIPTZGNTJK")
	hash1_p81 := Trytes("WZWSSZGBNFPYFYVHQQUKFJYBIEEPOXMPVOWYPRMRJBQVXJOSBXCAWJTXSCGRZX9VTFJJZVXTWWYDWONQQ")
	doTransactionHashTest(t,trytes1,hash1_p27,hash1_p81)

	// https://thetangle.org/transaction/MRYSIXABICSX9XQSLPAPQHGAPCMBDQZXH9EOHPLL9LFQNUDTETNQFUJO9DPHTNPJI9BTQH9RM9I999999
	var trytes2 Trytes
	hash2_p27 := Trytes("MRYSIXABICSX9XQSLPAPQHGAPCMBDQZXH9EOHPLL9LFQNUDTETNQFUJO9DPHTNPJI9BTQH9RM9I999999")
	hash2_p81 := Trytes("WPM9JCTQH9QHBHBJCODWDNPSLFLQDZADRAEZTZDL9OEGTVRZARVLVJHZIMPBPCTAIYJKWTUSRKNNTMFOQ")
	doTransactionHashTest(t,trytes2,hash2_p27,hash2_p81)
}

func doTransactionHashTest(t *testing.T, trytes Trytes, hash_p27 Trytes, hash_p81 Trytes) {
	// test input trytes hash
	fmt.Printf("trytes    length: %d\n", len(trytes));
	if trytes.Hash_p27() !=  hash_p27 {
		t.Errorf("trytes p27 hash is illegal %s\n",trytes.Hash_p27())
	}else{
		fmt.Printf("trytes p27 hash is ok %s\n", hash_p27)
	}
	if trytes.Hash() != hash_p81 {
		t.Errorf("trytes p81 hash is illegal %s\n",trytes.Hash())
	}else{
		fmt.Printf("trytes p81 hash is ok %s\n", hash_p81)
	}
	// create tx from trytes
	tx, err := NewTransaction(trytes)
	fmt.Printf("tx trytes length: %d\n", len(tx.Trytes()));
	tx.Dump();
	if err != nil {
		t.Fatal(err)
	}
	// test tx hash
	if (tx.Hash_p27() != hash_p27) {
		t.Errorf("tx p27 hash is illegal %s\n",tx.Hash_p27())
	}else{
		fmt.Printf("tx p27 hash is ok %s\n", hash_p27)
	}
	if (tx.Hash() != hash_p81) {
		t.Errorf("tx p81 hash is illegal %s\n",tx.Hash())
	}else{
		fmt.Printf("tx p81 hash is ok %s\n", hash_p81)
	}
}


func TestTxBundle(t *testing.T) {
	// https://iotasear.ch/bundle/DEXRPLKGBROUQMKCLMRPG9HFKCACDZ9AB9HOJQWERTYWERJNOYLW9PKLOGDUPC9DLGSUH9UHSKJOASJRU
	var trytes Trytes = "QQ9VLGQTJICJH9UZNSBXRSKBWVXCTRNGLJPEYFSZBISDCGBHGAV9TEHIMJS9LMQNHFNWVAXALKGESPWZMUMZPQCKCUFSEJZVHWZHZOEZBPTERXPHUQLQLZMENKOKAWMJ9LCFSIBSBEYCJQVQQMTMRJMDEKRXLCIRZFWQBRJYLPSK9XLWFYFTU9FBJATWPQRJBHWYJRUEXSXMBJLVWNYRTZJTHLEKDTWCGJ9OXDEZNWTKLTXXTKVFXDMRJUDAMDACRHJKZIJFJBZRVDLSTIMOWPTLLIVHCFUBMSQIPVPCSQAPZGHHNNQLWEHDTIQZQTAXJMTTROYOTIZSZKKQFXBHXFKSNAGZWHWEGXCKHSJQGBJGC9IKUSSJEAOHTPGPMIYPEXJXJKRLX9IOCUDKK9ONEUONYVGHRHXSAUZJXGVQNWSDZIYXXZMMJKRTOXSWJHBIMXPEMJTKIBSQKPICTKAQLJVOLZSGNVVBIOFJJKKJ9UBYKJWCBRPQLGBNEKEFRYCHB9PORAKEKTJZYZBFGZLONUJCPNINGUTYWTMDKTEPDASCHNVHXTUIOZ9PDALXKQYLILMUJEJWTYYAGEQXNNPLOMFGHSTFCNRMDFUSQREHFASDXZZOYNWNVKCRFZIDF9X9YKME9O9NJH9LFVNNSOXHSQOMBULFHBBPSGRCCGKWENQOZHRSIIHKKXAQTFISNVGIVMBDKSJYDW9VTZBAVYWWJAIYSCHGBIXKMKHBRTHWQMIWQVPWFUJQVUDZRDX9MMCXOQTQZGKECGIHATHUC9TDGKUKOYXEEBGTQYEO9KADOSMYWGQARTIUG9IUHQEBWSFHWDZCRCH9WDRJEUSQDBBGGKTOYBKYZX9LUKUGBVTEPXDOVVNSKPUWNARSILQNOQKATCUHMRVMKVHF9B9TEJDOMBDXLNKDJI9IIYRXNOQPBOVOEEGQFSZJJOFPNFVXOYZNLSOOA9FWDFJKDOQUHWHBNDWQZZVRBZJSLDVBRCGFCWXNUFTMLCHNXODSQMUIBPN9NMAXZXKUYYRUEDSLW9UEQYGSEBEOHGI9W9WAUFDEQCXVYOTBAAHFXHRGJBWGFZKIUMSWEXAD9EDALOOYQZIXKUOWJDHBHSEUDPJJRXANPPHUZWJM9KDVGJUAQHFJTWNFSULGSWMGMAOCAHTIYYJONOLKGNKRXWWZYWKITSFPQJNHQWAIJULYWPXQENPZTWZISXJBWYLENOINLFBRWWGWSWJONHIA99VGCSAT9XNMZUCSVEJMZJASUSXVUWFSVFXUIFWGIFKLEFLANHTITFCOPXRXTDXRDHLWP9RJHVQJMLPBFVHTIOQMSZECNPITTBTPLUHDQQZP9BWTWIZSOTMTZQWHCETRTKQPOHPJMJMLSBWC9ZRQAZDLAPJHAXRQZ9RUHHBPASWVUHBYX9FH9PLEHQEKCOMIHUNDVKOPKXEFM9CNP9LOLMBVHMMWNDCKHSYZEXOJAQOHMRXEGWMWFW9YVOZ9YDPHWVTKWFYUECSROYJENFPSIKHBJRSNWO9KQUENGPVULVYAQFAIYFSNIYR9LLRMYNCNQQAOPFNMWFSWSPMWNNIRNVKDZWRLGMPCBOVIMMXEZUFYPFPIGWTGOLDAEBZQADSOGVDZXHEWZGHNAAHMFPSOZD9SEPNCW9GTN9WLFDDCKMMXPXAEUUJPJFKKWMGUKVMYBH9AIEFAIIDJOAWRDKECA99XOYRSFZQKTVRJMTUAQJZUTKGXROESUYYSHTLRIZRPSNDFEEZWXCQONZYCD9TOHCBP9ISXQ9YSRZJ999Z9TETYOINSDGRBQSDTVFABHQNLTWGFYLHBHPVKLIBUMLVSURAOS9QHXDTIPKOJDLYOKRCEKCBMKVYIAKVA9WTGDWHIRUAWOVRKOSYTNIZAZNTJRFJDMNLGHTDKPKZDLBPQXRIRIVREMOBCPHMBBAUKNXHU9XIZNG9GD9LDIBBFPSI9PJNRCHXHNWAZXIACE9LUBNUWOK9LGJ9MKZQRI9CBCJUNALQKKVGGSPRJFAGCXNFO99YMLMKI9NVUZCZ9BCUEBSGMAVNKGWYWWQPZISMKAROXLQWEHOJIJOIIYRUDBNHRD9DEDQWQONAXKKSYMYCFTITZFKIXKZCGAVAFQIYEMESOIMWUUDSXJRR9RVWTAAHCOA9SCQBF9LAGPPYDXPEBKLHZ9KHKTXFP9XOVMVWIXEWMOISJHMQEXMYMZCUGEQNKGUNVRPUDPRX9IR9LBASIARWNFXXESPITSLYAQMLCLVTLHW9999999999999999999999999999999999999999999999999999FBIEUWD99A99999999C99999999DEXRPLKGBROUQMKCLMRPG9HFKCACDZ9AB9HOJQWERTYWERJNOYLW9PKLOGDUPC9DLGSUH9UHSKJOASJRU9MMRRSLICRITOROFC9FBVWLFEDNN9KJKYHUMRCJEUDGCYCWTBP9HHBEEJRFAU9FALRJWTU99NZK999999UE9VSBDVSRNTBZWPXYZPGAUTSWFLARLPXMHYBSTEUWIDOFJQJMVIACGUPTOMBWQO9AEADCFCMFJ999999WQKHJEXIHMOKQETOUTEO9JUPCDNAJQYZVXQRCXGYGEBOTMHE9HSJXVYVQUS9FPDLQWWKSYVDPCXX9LLAT"
	tx, err := NewTransaction(trytes)
    if err != nil {
		t.Fatal(err)
	}
	assert.Equal(t,Trytes("DEXRPLKGBROUQMKCLMRPG9HFKCACDZ9AB9HOJQWERTYWERJNOYLW9PKLOGDUPC9DLGSUH9UHSKJOASJRU"), tx.Bundle,
		"tx bundle is illegal %s\n",tx.Bundle)
}

var seeds = []string{
	"AXDAPEZOZOXOIUFBCKJOVUWWIKZFS9VJQQPECUPDSCFRVLMIBIVQPKIFHLBSKHPJIWHHBTMYDMCVDS9N9",
	"AXDAPEZOZOXOIUFBCKJOVUWWIKZFS9VJQQPECUPDSCFRVLMIBIVQPKIFHLBSKHPJIWHHBTMYDMCVDS9N",
	"AXDAPEZOZOXOIUFBCKJOVUWWIKZFS9VJQQPECUPDSCFRVLMIBIVQPKIFHLBSKHPJIWHHBTMYDMCVDS999",
	"AXDAPEZOZOXOIUFBCKJOVUWWIKZFS9VJQQPECUPDSCFRVLMIBIVQPKIFHLBSKHPJIWHHBTMYDMCVDS",
}

func TestAddressByInputSeed(t *testing.T) {
	for _, s := range seeds {
		for len(s) < 81 {  //need to pad with '9', the wallet(js) code do the padding for the input seeds
			s += "9";
		}
		seedT, err := ToTrytes(s)
		//fmt.Printf("%s\n",seedT)
		assert.Equal(t,81,len(seedT))
		if err != nil {
			t.Error(err)
		}
		//dumpAddress(seedT, t)
	}
}

func dumpAddress(seed Trytes, t *testing.T){
	fmt.Printf("seed=%s\n",seed)
	addresses, _ :=NewAddresses(seed, 0, 1, 2)
	for i,a := range addresses {
		fmt.Printf("\t index=%d, addr=%s, len=%d, \n\t\t   add_wcs=%s \n",i,a,len(a), a.WithChecksum())
		if a.Checksum() != a.WithChecksum()[81:] {
			t.Errorf("\t\t  checksum not equal %s != %s\n",a.Checksum(),a.WithChecksum()[81:])
		}
	}
}

func TestRandomSeed( t *testing.T) {
	seedRand := NewSeed()
	seedT2, err2 := ToTrytes(string(seedRand))
	if err2 != nil {
		t.Error(err2)
	}
	//fmt.Printf("%s\n",seedT2)
	assert.Equal(t,81,len(seedT2))
}
func TestRawTx(t *testing.T){
    // https://thetangle.org/transaction/WNOGGIYGFWHI9ZYWSDSOWHBDIVQMCMSTLBJKEOZ9AJCIODJPGEASTAQZINI9PXIBEXPKOZWUXLYNZ9999
	tx_hash := Trytes("WNOGGIYGFWHI9ZYWSDSOWHBDIVQMCMSTLBJKEOZ9AJCIODJPGEASTAQZINI9PXIBEXPKOZWUXLYNZ9999")
	rawTx := Transaction{
		SignatureMessageFragment
		Address:                  "NLKAUOEE9W9BQHYZZRAQQVPLONDMVLBFUJYUIXNRNQOPGUQRRGCUNGGQHQA9EFNHAPSXNPUPBKJQEQJABRGLRGUFYD",
		Value:                    -1149849032,
		ObsoleteTag:              "999999999999999999999999999",
		Tag:                      "999999999999999999999999999",
		Timestamp:                time.Unix(1513786337,0),
		CurrentIndex:             1,
		LastIndex:                3,
		Bundle:                   "G9YCJLFXLFZOKXRENDETWKGATBQJIKWIXYQNURYCNGLEGEJAIELHBYSCZQUSQLEZJJUL9ERGSFTJBZIVX",
		AttachmentTimestamp:      "V9ZULISJE",
		AttachmentTimestampLowerBound: "999999999",
		AttachmentTimestampUpperBound: "MMMMMMMMM",
		Nonce:                    "UA999IL99999999999999999999",
		TrunkTransaction:         "IWNGBRBCNLECEYJRWWFYRTIPZYVIHSLYPUFRUBLPDPYEDVXYTDKMWKPLGACNVIRWACCWX9OXNMNBA9999",
		BranchTransaction:        "LJTVG9YWIILCSDGTZXEEGULNRJSPXAFBAXMEZTDNWBUE9EAQZAGQFUPDWXTAK99AAZJDLMDOVTG9Z9999",
	}
	assert.Equal(t, tx_hash, rawTx.Hash())
	//fmt.Printf("%s\n",raw_tx.Hash())
	//fmt.Printf("%s\n",raw_tx.Hash_p27())
	//raw_tx.Dump()
}

func TestRawTx2(t *testing.T){
	//https://thetangle.org/transaction/SYLXZTEIBYKSYFELXJCFGRZNLUOLTARZYW9YJHRAVAUFYJLPYSEBTGZGENEMUVMEMMQQGIKHBUXC99999
	//&{0 [{}]}
	raw_tx := Transaction{
		SignatureMessageFragment
		Address:                  "LGOTCUDXMJQWGEDFUEEOMCIPDKCZSHNV9PQSIQLLMHMMVVXNPEGTYCHHSTITSUETK9LCXLVDIPXQWOYU9",
		Value:                    141358000,
		ObsoleteTag:              "999999999999999999999999999",
		Timestamp:                time.Unix(1514640651,0),
		CurrentIndex:             37,
		LastIndex:                43,
		Bundle:                   "JPUOEFIGLPVYJLTXFCHLDQRJJTVDZKC9XDLCTYJBDGSNKNNJCP9DA9QYBNRDWG9WTTUGFDTLQIGLB9LJX",
		TrunkTransaction:         "HZBDRKHATOAOYYHRZTJIPAGHKAXEAGGBREKMFIAJXAX9GNMXEDI9PDUEKTM9VGBHXPSXTZ9CVXYL99999",
		BranchTransaction:        "TKZXZXNWFBLK9OXZGQ9UYEST9QQCJLWJJSHWNBUMNVWYQLTPWYNLSIMGCMAZHGTMOTN9EXFPURLG99999",
		Tag:                      "999999999999999999999999999",
		AttachmentTimestamp:      "PGXCATVJE",
		AttachmentTimestampLowerBound: "999999999",
		AttachmentTimestampUpperBound: "MMMMMMMMM",
		Nonce:                    "MPUBWMVRRJAHBQWOIEILQZLADXN",
	}
	//fmt.Printf("%s\n",raw_tx.Hash())
	//fmt.Printf("%s\n",raw_tx.Hash_p27())
	//raw_tx.Dump()
	assert.Equal(t,Trytes("SYLXZTEIBYKSYFELXJCFGRZNLUOLTARZYW9YJHRAVAUFYJLPYSEBTGZGENEMUVMEMMQQGIKHBUXC99999"),raw_tx.Hash())

	trytes := raw_tx.Trytes()
	tx, err := NewTransaction(trytes);
	assert.Equal(t, 2673,len(trytes))
	if err != nil {
		t.Fatal(err)
	}
	assert.Equal(t, Trytes("SYLXZTEIBYKSYFELXJCFGRZNLUOLTARZYW9YJHRAVAUFYJLPYSEBTGZGENEMUVMEMMQQGIKHBUXC99999"), tx.Hash())
}

func getFirstAddrForSeed(t *testing.T, seed string) (addr Address) {
    seedT,_:= ToTrytes(seed)
	assert.Equal(t,81,len(seedT))
	addresses, _ :=NewAddresses(seedT, 0, 1, 2)
	return addresses[0]
}

func TestTxReattach(t *testing.T) {
	a :=getFirstAddrForSeed(t,seeds[0])
	assert.Equal(t,a,Address("HBRZJIYYCGVA9THZYNXSUXGFUYBXEGCFSTIFJYF99KVG9QMXPYHASWQKV999AYQYKYJATYZSIWZJNVXCZ"));
	a = getFirstAddrForSeed(t,seeds[2])
	assert.Equal(t,a,Address("USBPBREGOWSWPMMPQHLSKABE9E9JFLNHUWRKRDHLEBIIFBLTEDRNQHHKCEKUPXFJYVKKUPUKDAPGWQLFX"));
	assert.Equal(t,a.WithChecksum(),Trytes("USBPBREGOWSWPMMPQHLSKABE9E9JFLNHUWRKRDHLEBIIFBLTEDRNQHHKCEKUPXFJYVKKUPUKDAPGWQLFXXUGKTMQKC"))

	// https://thetangle.org/transaction/AEWQVVOKVKL9QPXVGVTN9VUIKSOYOBGSYBXAXZIXCKMIOVQMNOJDFATTDAVDOFMP9NTLJDJBAFYHZ9999
	// tx_hash : AEWQVVOKVKL9QPXVGVTN9VUIKSOYOBGSYBXAXZIXCKMIOVQMNOJDFATTDAVDOFMP9NTLJDJBAFYHZ9999
	// address_withchecksum : USBPBREGOWSWPMMPQHLSKABE9E9JFLNHUWRKRDHLEBIIFBLTEDRNQHHKCEKUPXFJYVKKUPUKDAPGWQLFXXUGKTMQKC
	/*
	signatureMessageFragment
	address: USBPBREGOWSWPMMPQHLSKABE9E9JFLNHUWRKRDHLEBIIFBLTEDRNQHHKCEKUPXFJYVKKUPUKDAPGWQLFX
	value: 0
	obsoleteTag: JB9999999999999999999999999
	timestamp: 2017-12-31 19:05:22 +0800 CST
	currentIndex: 0
	lastIndex: 0
	bundle: DXUPOGHZCORDKWIDVGGEICEKEYXPIDKZBYDQXJCVPUPDTJDTXFRAHFQZFSEASIDFPVUCZGGWWYWFKVSQC
	trunkTransaction: JLULHIUTUKZYXNMHFJHLKXFTOFSXLNHYKMQWMZERDPVEZYTQIQJKZYY9WYWSRIPXKZGVTQCJWRGLZ9999
	branchTransaction: UPFESDFZUROAKNBHJHD9MASRRNGVMNSVREOJ9YPLHRGVFXYDLRWWOMKA9ZLITIEZWBNVKBAPVFTNZ9999
	tag: 999999999999999999999999999
	attachmentTimestamp: HNYUITVJE
	attachmentTimestampLowerBound: 999999999
	attachmentTimestampUpperBound: MMMMMMMMM
	nonce: QA9999A99999999999999999999
	*/

    var t1 Trytes = Trytes
    newTx,_ := NewTransaction(t1)
    assert.Equal(t, newTx.Address, a)
    assert.Equal(t, Trytes("AEWQVVOKVKL9QPXVGVTN9VUIKSOYOBGSYBXAXZIXCKMIOVQMNOJDFATTDAVDOFMP9NTLJDJBAFYHZ9999"), newTx.Hash())
    assert.Equal(t, Trytes("DXUPOGHZCORDKWIDVGGEICEKEYXPIDKZBYDQXJCVPUPDTJDTXFRAHFQZFSEASIDFPVUCZGGWWYWFKVSQC"), newTx.Bundle)

}



func TestNonce(t *testing.T) {
	var trytes Trytes
	tx, err := NewTransaction(trytes)
	if trytes.Hash() != tx.Hash() {
		fmt.Printf("not equal %s %s\n",trytes.Hash(),tx.Hash())
	}
	fmt.Printf("%v\n",tx.Value)
	fmt.Printf("%v\n", Trytes("IOTA").Trits().Int())
	fmt.Printf("%v\n",Int2Trits(14265,27))
	fmt.Printf("%v\n",Int2Trits(14,6))
	fmt.Printf("%v\n",Int2Trits(14,27).Trytes())
	if err != nil {
		t.Fatal(err)
	}
	/*
	if trytes.Hash() != tx.Hash() {
		t.Errorf("hash not equals %s, %s",trytes.Hash(),tx.Hash())
	}
	*/

	/*
	err = checkTx(trytes)
	if err == nil {
		fmt.Printf(" checkTx(trytes) ok \n")
		fmt.Printf("trytes len=%d\n",len(trytes))  //2673
		fmt.Printf("trytes[2279:2295]=%s\n",trytes[2279:2295])
	}
	fmt.Printf("len=%d,%s\n",len(trytes.Hash()),trytes.Hash())  //UFROVDSOETBS9LAKBTYGQGECXLARNIRECGJOXZWZCPLDLSLFIGFIAOL9IRHFPBMSTEFEBE9AIKZ9RCEST
	fmt.Printf("len=%d,%s\n",len(tx.Hash()),tx.Hash())
	fmt.Printf("len=%d,%X\n",len(tx.Hash()),tx.Hash())

	var mwm int64 = 0
	for mwm = 1; mwm <= 18; mwm++ {
		fmt.Printf("%v, %v\n",mwm,tx.HasValidNonce(mwm))
	}
	*/

	/* always fails
	if !tx.HasValidNonce(18) {
		t.Error("cannot validate nonce")
	}
	*/
}
