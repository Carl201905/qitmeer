// Code generated by github.com/noxproject/nox/tools/ngen. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"
	"math/big"
)

var _ = (*configJSON)(nil)

// MarshalJSON marshals as JSON
func (c Config) MarshalJSON() ([]byte, error) {
	type Config struct {
		Id *UInt256 `json:"Id"  required:"true" min:"0"`
	}
	var enc Config
	enc.Id = (*UInt256)(c.Id)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON
func (c *Config) UnmarshalJSON(input []byte) error {
	type Config struct {
		Id *UInt256 `json:"Id"  required:"true" min:"0"`
	}
	var dec Config
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Id == nil {
		return errors.New("missing required field 'Id' for Config")
	}
	c.Id = (*big.Int)(dec.Id)
	if c.Id.Cmp(big.NewInt(0)) == -1 {
		return errors.New("error field 'Id' for Config, minimal is 0")
	}
	return nil
}
